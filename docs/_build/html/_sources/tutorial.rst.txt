Tutorial
========

Generate an OIF Config File 
-------------------------------
The survey simulator post processing code comes with several command line utilities. One of these is 
a config file generator for Objects in Field. makeConfigOIF takes two required parameters, the name of 
the orbit file and the pointing database. There are several optional arguments which can be used to further 
customise your OIF usage. Details of these optional arguments can be seen in inputs.

The most basic OIF config file can be generated by typing::

   makeConfigOIF ./data/test/testorb.des ./data/test/baseline_10yrs_10klines.db

This will return the following::

   [CONF]
   cache dir = _cache/testorb/1-5

   [ASTEROID]
   population model = ./data/test/testorb.des
   spk t0 = 59830
   ndays = 36
   object1 = 1
   nobjects = 5
   spk step = 30
   nbody = T
   input format = whitespace

   [SURVEY]
   survey database = ./data/test/baseline_10yrs_10klines.db
   field1 = 2
   nfields = 10000
   mpcobscode file = obslist.dat
   telescope = I11
   surveydbquery = SELECT observationId,observationStartMJD,fieldRA,fieldDEC,rotSkyPos FROM SummaryAllProps order by observationStartMJD

   [CAMERA]
   threshold = 5
   camera = instrument_polygon.dat

   [OUTPUT]
   output file = stdout
   output format = csv
 
This file will be saved as testorb-1-5.ini in the directory it has been run within. 

Running OIF
--------------
Now that we have an OIF config file, we can easily run OIF to check by typing::

   oif testorb-1-5.ini




Is an Object Detected by LSST?
-------------------------------
To check if an object is detected by LSST, we recommend using `Objects in Field <https://github.com/eggls6/objectsInField>`_. 
OIF requires a config file and a set of orbits. See our page on using objects in field for more information about 
the forms these can take::




   !!OID FORMAT q e i Omega argperi t_p H t_0 INDEX N_PAR MOID COMPCODE
   St500000a  COM   4.91636   0.05966   7.60840 313.71100 150.14863  47268.27529  5.63  54800.00000 1 6 -1 Python